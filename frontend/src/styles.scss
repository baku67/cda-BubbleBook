@use 'assets/custom-theme' as *;
@use '@angular/material' as mat;

/* https://cssgradient.io/shades-of-blue/ */
:root {
    --primary-color: #3ec0ec; /* Aquamarine */
    --primary-color-persist: #3ec0ec; /* Aquamarine */
    --color: #ffffff;

    --green: #2eee94;
    --red: #FF5252;

    --font-size-small: 0.875rem;   /* 14px */
    --font-size-base: 1rem;        /* 16px */
    --font-size-large: 1.25rem;    /* 20px */
    --font-size-heading: 2rem;     /* 32px */

}

@font-face {
    font-family: 'Poppins';
    src: url('assets/fonts/Poppins-Medium.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

// Styles Composants Angular Material !
.light-theme {
    @include mat.all-component-themes($myapp-light-theme); // Applique les styles du thème clair
    --color: #ffffff;
    --colorContrast: #011829;
    --surface-grised: #00000008;

    --surface-background-color: #f0f3f5; //!!! map-get(map-get($myapp-light-theme, bg-color), surfaces)
    --element-bg-color: #01172de6; // attention utilisé aussi pour le border des sections PriacySettings
}
.dark-theme {
    @include mat.all-component-themes($myapp-dark-theme); // Applique les styles du thème sombre
    --color: #000000;
    --colorContrast: #f7f8f8;
    --surface-grised: #00000017;

    --surface-background-color: #252526; //!!! map-get(map-get($myapp-dark-theme, bg-color), surfaces)
    --element-bg-color: #01172de6;
}

body.light-theme {
    color: #333333 !important;
    background-image: map-get(map-get($myapp-light-theme, bg-color), default); 
}
body.dark-theme {
    color: #F5F5F5 !important;
    background-image: map-get(map-get($myapp-dark-theme, bg-color), default); 
}

// NAV et NavMenu
body.light-theme .matSubMenu,
body.light-theme .navBottomMobile {
    background-color: rgb(243, 245, 250);
}
body.dark-theme .matSubMenu,
body.dark-theme .navBottomMobile {
    background-color: var(--element-bg-color);
}
body.dark-theme .matSubMenu {
    border: 1px solid var(--primary-color);
}

// CARD & SURFACE
body.light-theme .card, body.light-theme .surface {
    background-color: map-get(map-get($myapp-light-theme, bg-color), surfaces);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);

    border: 2px solid #ffffff47;
}
body.dark-theme .card, body.dark-theme .surface {
    background-color: map-get(map-get($myapp-dark-theme, bg-color), surfaces);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);

    border: 1px solid var(--primary-color);
}

// ELEMENTS
body.light-theme .element {
    background-color: map-get(map-get($myapp-light-theme, bg-color), elements);
}
body.dark-theme .element {
    background-color: map-get(map-get($myapp-dark-theme, bg-color), elements);
}

body.light-theme .border {
    border-color: map-get(map-get($myapp-light-theme, bg-color), border);
}
body.dark-theme .border {
    border-color: map-get(map-get($myapp-dark-theme, bg-color), border);
}


// GLOBAL LOADER
body.light-theme .loading-screen {
    background-color: var(--primary-color);
}
body.dark-theme .loading-screen {
    background-color: var(--element-bg-color);
}

// LandingPage .pageContent 
.pageContent-landingPage::before {
    content: "";
    position: absolute;
    height: 100dvh;
    inset: 0;
    pointer-events: none;
    transition: all 0.5s ease;
    opacity: 1;

    border-radius: 7px;
    box-shadow: inset 0 0 0 0px rgba(0, 0, 0, 0); /* état initial (light-theme) */
    animation: fadeInBox-shadow-light 1s ease forwards;
}
@keyframes fadeInBox-shadow-light {
    from {
        box-shadow: inset 0 0 0 0px rgba(0, 0, 0, 0);
    }
    to {
        box-shadow: inset 0 0 0px 2px rgba(184, 204, 202, 0.25);
    }
}

body.light-theme .btn-login {
    border-color: #ffffff38;
}
body.dark-theme .btn-login {
    border-color: var(--primary-color);
}


body.dark-theme .pageContent-landingPage::before {
    box-shadow: inset 0 0 0 0px #3ec0ec00; /* changement fluide vers dark-theme */
    transform: translateY(-0px); //!\\ Pour avoir le border-top border-cadre dark-theme visible sur mobile (vrai device), correspond au 0 0 0 2px du box-shadow anim (clairement un hack DT)

    border-radius: 7px;
    // animation: box-shadow-lp 1s 0s linear forwards; // effet stylé/dégueu (osef) 
    animation: fadeInBox-shadow-dark 1s ease forwards; 
}
@keyframes fadeInBox-shadow-dark {
    from {
        box-shadow: inset 0 0 0 0px #3ec0ec00;
    }
    to {
        // //!\\ Relié au transform:translateY(-0px) border-cadre dark-theme (clairement un hack DT), sur Firefox ça marche avec "0 0 0 1px" parce que y'a pas le 1px border-top gris du Chrome de merde
        box-shadow: inset 0 0 0 2px #3ec0ec; 
    }
}
// @keyframes box-shadow-lp {
//     from { box-shadow: inset 0 0 0 185px #3ec0ec; }
//     to { box-shadow: inset 0 0 0 1px #3ec0ec; }
// }


/* Décalage des notifs "Notyf" pour navBar */
.notyf {
    top: auto !important;
    bottom: 57px !important; 
}
.notyf__icon i.material-icons {
    font-size: 24px;
    color: white !important;
    position: relative;
    bottom: -2px;
}
.notyf__toast--lower {
    // width: 98% !important; // je sais pas trop
    width: 100% !important;
    margin: 7px auto 0 auto !important; // gap entre les notifs + centré
}


// SKELETON
body.light-theme ngx-skeleton-loader .skeleton-loader.progress {
    background-color: var(--primary-color);
    &::before { // Pusle 
        background-image: linear-gradient(90deg, #98f3ff00, #64edff, #98f3ff00);
    }
}
body.dark-theme ngx-skeleton-loader .skeleton-loader.progress {
    background-color: #16a0adb7 !important;
    &::before { // Pusle 
        // background-image: linear-gradient(90deg, #fff0, #fff9, #fff0);
    }
}


body.dark-theme app-user-card .section-top {
    box-shadow: 0px 2px 35px rgb(146 146 146);
}
body.light-theme app-user-card .section-top {
    box-shadow: 0px -8px 35px rgb(108 123 126 / 85%);
}


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
}
html, body {
    margin: 0;
    padding: 0;
    width: 100%;
    // background-color: var(--primary-color);
    animation: fadeIn 0.5s ease forwards;
}
html {
    height: auto !important;
}
body {
    height: 100%;
    // overflow-x: hidden; // Nope
}
h1,h2,h3,h4,h5,h6, span, p  {
    user-select: none;
}
.mdc-text-field {
    background-color: var(--surface-grised);
}



/* PAS DE BACKGROUND WHITE AUTOCOMPLETE !!!!!!!!!! */
input:-webkit-autofill,
input:-webkit-autofill:hover, 
input:-webkit-autofill:focus, 
input:-webkit-autofill:active{
    -webkit-background-clip: text;
    -webkit-text-fill-color: var(--colorContrast);
    transition: background-color 5000s ease-in-out 0s;
    box-shadow: inset 0 0 20px 20px #23232300;
}
// merci

.card {
    box-sizing: border-box !important;
    padding: 10px 13px;
    border-radius: 10px !important;
    width: 100%; // temporaire mobile
}
.surface {
    border-radius: 10px;
    width: 100%; // temporaire mobile
    position: relative;
}

.border {
    border: 1px solid;
}

a {
    display: block;
    text-decoration: none;
    color: inherit;
}

button {
    color: inherit;
}
.bigButton {
    padding: 32px !important;
}

a {
    text-decoration: none;
    color:inherit;
}
li {
    list-style-type: none;
}


h1, h2, h3 {
    font-family: 'Poppins', sans-serif;
}


.pageContent {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 15px;
    align-items: center;
    padding: 5px 13px;

    // Pour que backdrop-filter des enfants fonctionne, les animations d'opacity sur les parents sont interdits (car crééent des contexte de rendus différents)
    // Soit utiliser un scale-in (transform:scale() ok)
    // Soit mettre les anims de fade-in sur chaque enfant (mais pas sur les enfants qui sont eux-même encore parents d'éléments qui doivent avoir le backdrop-filter)
    // ATTENTION:
    // Pour l'instant j'ai pas déplacé les [class.fadeOut]="isAnimatingFadeOut" de chaque .pageContent sur chaque enfant dans les HTML parce qque ça passe visuellement mais il faudrait pour que ça soit encore plus propre

    // Déplacé sur chaque enfant de .pageContent
    // opacity: 0;
    // animation: fadeIn 0.6s ease forwards;

    // Les sections ne sont plus que des div blurred enfants de .pageContent
    section {
        width: 100%;
        max-width: 500px;
        border-radius: 7px;
        border: 1px solid rgba(255, 255, 255, 0.041); // à voir
        box-shadow: 0px 4px 7px #00000033; // à voir

        // Anim déplacée sur chaque enfant de .pageContent
        opacity: 0;
        animation: fadeInNav 0.6s ease forwards;
        backdrop-filter: blur(12px);
    }

    form {
        display: flex;
        flex-direction: column;
        max-width: 400px;
        margin: 0 auto;

        // Anim déplacée sur chaque enfant de .pageContent
        opacity: 0;
        animation: fadeInNav 0.6s ease forwards;
        backdrop-filter: blur(12px);
    }

    app-user-card {
        opacity: 0;
        animation: fadeInNav 0.6s ease forwards;
        backdrop-filter: blur(10px);
    }

    .btn-login {
        backdrop-filter: blur(7px);
    }
}
// Pour les [class.fadeOutNav]="isAnimatingFadeOut" des éléments enfants de pageContent (y compris les sections et forms)
.fadeOutNav {
    // /!\ Penser à modifier le délai de fade-out.guard.ts
    animation: fadeOutNav 0.5s ease forwards !important;
}
// Pour les éléments enfants de pageContent qui ne sont ni des section ni des forms (à ajouter aux hosts)
.fadeInNav {
    opacity: 0;
    animation: fadeInNav 0.6s ease forwards; 
}

.pageContent-bottom-nav-decal {
    height: 8vh; // Equivalent à la hauteur de la navBarre
    width: 100%;
    visibility: hidden;
}


.modalContent {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 15px;
    align-items: center;
    // padding: 10px 20px;

    section {
        width: 100%;
    }
}


.inline-flex {
    display: inline-flex;
    align-items: center;
    gap: 10px;
}
// error

.title-button {
    display: inline-flex;
    width: 100%;
    justify-content: space-between;
}


.btn-underlined {
    text-decoration: underline;
}

.loadingLine {
    display: inline-flex;
    align-items: center;
    gap: 20px;
}

.iconLine {
    display: inline-flex;
    align-items: center;
    gap: 10px;
}

.color-green {
    color: var(--green);
}
.color-red {
    color: var(--red);
}

.spinner-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: -webkit-fill-available;
    min-height: 300px;
}
// Correspond à tout les spinner de l'app (autres que celui globalLoading qui est dans app-component.scss)
::ng-deep mat-spinner .mdc-circular-progress__indeterminate-circle-graphic {
    // stroke: #ff1100 !important;  // Marche pas
}





.cta-btn-primary {
    display: block; /* Rendre les liens comme des blocs */
    text-align: center; /* Centrer le texte à l'intérieur des boutons */
    padding: 10px 20px; /* Ajuster le padding */
    background-color: #009688; /* Couleur d'arrière-plan */
    color: var(--colorContrast); /* Couleur du texte */
    text-decoration: none; /* Enlever la décoration du texte */
    width: 100%; /* Faire en sorte que le bouton occupe toute la largeur de son conteneur */
    box-sizing: border-box; /* Inclure le padding et la bordure dans la taille de l'élément */
}
.cta-btn-secondary {
    display: block; /* Rendre les liens comme des blocs */
    text-align: center; /* Centrer le texte à l'intérieur des boutons */
    padding: 10px 20px; /* Ajuster le padding */
    color: var(--colorContrast); /* Couleur du texte */
    text-decoration: none; /* Enlever la décoration du texte */
    width: 100%; /* Faire en sorte que le bouton occupe toute la largeur de son conteneur */
    box-sizing: border-box; /* Inclure le padding et la bordure dans la taille de l'élément */
}

.mat-mdc-menu-panel {
    min-width: 60px !important;
}

.mat-mdc-form-field-subscript-wrapper {
    height: 4px;
}

.matFieldInput {
    width: 100%;
}

mat-expansion-panel-header {
    // padding: 0 18px !important;
}
mat-panel-title {
    gap: 15px;
}

.relative {
    position: relative;
}

.noMargin {
    margin: 0px !important;
}
.marginTopBottom {
    margin-top: 10px;
    margin-bottom: 10px;
}

.flex1 {
    flex: 1;
}
.flex0 {
    flex: 0;
}


// Bouton pas Material
.custom-button {
    background: none;
    border: none;
    padding: 0 !important;
    margin: 0;
    width: 100%; /* facultatif */
    height: auto; /* facultatif */
    display: inline-flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    cursor: pointer; /* optionnel, pour garder le comportement de "lien" */
}
.custom-button:focus {
    outline: none; /* Supprime le focus par défaut */
}
.custom-button:active {
    background-color: transparent; /* Évite l'effet "cliqué" */
}
.custom-button:hover {
    background-color: transparent; /* Évite l'effet "hover" de Material */
}

// Fix mat-select options derriere le modal:
.cdk-global-overlay-wrapper, .cdk-overlay-container {
    z-index: 99999 !important;
 }


.mat-internal-form-field>label {
    padding-left: 13px !important;
}

