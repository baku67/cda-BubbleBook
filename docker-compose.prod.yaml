# Pour lancer ce fichier de config:
# "docker-compose -f docker-compose.prod.yaml up --build"

services:

  # Proxy pour servir l'API et l'app Angular sur le meme domaine pour pouvoir mettre en place le https (certificats SSL) pour le SetCookie RefreshToken oyé
  reverse-proxy:
    image: traefik:v2.10
    restart: always # ne pas oublier de faire "sudo systemctl enable docker"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/certs:/certs # sans :ro (car il doit etre accessible en lecture ET écriture pour les certifs)
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - mynetwork
    labels:
      - "traefik.enable=true"
    entrypoint: ["sh", "-c", "chmod 600 /certs/acme.json && traefik"]


  php:
    build:
      context: ./backend 
      dockerfile: Dockerfile 
    container_name: php-symfony
    restart: always # ne pas oublier de faire "sudo systemctl enable docker"
    environment:
      APACHE_DOCUMENT_ROOT: /var/www/html/public
    expose:
      - "80"
    volumes:
      - ./backend:/var/www/html:delegated 
      - vendor:/var/www/html/vendor 
      - var:/var/www/html/var 
      - php-certs:/etc/ssl:rw 
    networks:
      - mynetwork
    depends_on:
      - postgres
      - mailer
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`bubblebook.fun`) && PathPrefix(`/api`)" # CHANGER L'ip EC2-AWS ou nom de domaine
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=80"




  postgres:
    image: postgres:15 
    restart: always # ne pas oublier de faire "sudo systemctl enable docker"
    env_file:
      - backend/.env
    ports:
      - "5432:5432" 
    volumes:
      - pg_data:/var/lib/postgresql/data 
    networks:
      - mynetwork


  pgadmin:
    image: dpage/pgadmin4 
    restart: always # ne pas oublier de faire "sudo systemctl enable docker"
    env_file:
      - backend/.env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - mynetwork
    volumes:
      - pgadmin_data:/var/lib/pgadmin 


  mailer:
    image: axllent/mailpit 
    restart: always # ne pas oublier de faire "sudo systemctl enable docker"
    ports:
      - "1025:1025" 
      - "8025:8025"  
    networks:
      - mynetwork
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1


  angular:
    image: nujabb/front-opti:latest
    restart: always # ne pas oublier de faire "sudo systemctl enable docker"
    expose:
      - "80" # et non plus "ports" 80:80
    networks:
      - mynetwork
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.frontend.rule=Host(`bubblebook.fun`)" # CHANGER L'ip EC2-AWS ou nom de domaine
    - "traefik.http.routers.frontend.entrypoints=web"
    - "traefik.http.routers.frontend.entrypoints=websecure"
    - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
    - "traefik.http.services.frontend.loadbalancer.server.port=80"


volumes:
  pg_data:
  pgadmin_data:
  node_modules: 
  vendor:  
  var:  
  php-certs:

networks:
  mynetwork:

